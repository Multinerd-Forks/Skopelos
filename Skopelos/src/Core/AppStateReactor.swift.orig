//
//  AppStateReactor.swift
//  Skopelos
//
//  Created by Alberto De Bortoli on 28/07/2016.
//  Copyright Â© 2016 Alberto De Bortoli. All rights reserved.
//

import UIKit

public protocol AppStateReactorDelegate {
    func didReceiveStateChange(appStateReactor: AppStateReactor) -> Void
}

public final class AppStateReactor: NSObject {

    public var delegate: AppStateReactorDelegate?

    deinit {
        NSNotificationCenter.defaultCenter().removeObserver(self, name: UIApplicationWillResignActiveNotification, object: nil)
        NSNotificationCenter.defaultCenter().removeObserver(self, name: UIApplicationDidEnterBackgroundNotification, object: nil)
        NSNotificationCenter.defaultCenter().removeObserver(self, name: UIApplicationWillTerminateNotification, object: nil)
    }

    public override init() {
        super.init()
        initialize()
    }
<<<<<<< HEAD
    
    func initialize() {
        NSNotificationCenter.defaultCenter().addObserver(self,
                                                         selector: #selector(applicationWillResignActive),
                                                         name: UIApplicationWillResignActiveNotification,
                                                         object: nil)
        NSNotificationCenter.defaultCenter().addObserver(self,
                                                         selector: #selector(applicationDidEnterBackground),
                                                         name: UIApplicationDidEnterBackgroundNotification,
                                                         object: nil)
        NSNotificationCenter.defaultCenter().addObserver(self,
                                                         selector: #selector(applicationWillTerminate),
                                                         name: UIApplicationWillTerminateNotification,
                                                         object: nil)
=======

   private func initialize() {
        NSNotificationCenter.defaultCenter().addObserver(self, selector: #selector(applicationWillResignActive), name: UIApplicationWillResignActiveNotification, object: nil)
        NSNotificationCenter.defaultCenter().addObserver(self, selector: #selector(applicationDidEnterBackground), name: UIApplicationDidEnterBackgroundNotification, object: nil)
        NSNotificationCenter.defaultCenter().addObserver(self, selector: #selector(applicationWillTerminate), name: UIApplicationWillTerminateNotification, object: nil)
>>>>>>> 20a8b3e3ad02faa36399dae1df498d154af5192d
    }
    
    @objc func applicationWillResignActive(notification: NSNotification) {
        forwardStatusChange()
    }
    
    @objc func applicationDidEnterBackground(notification: NSNotification) {
        forwardStatusChange()
    }
    
    @objc func applicationWillTerminate(notification: NSNotification) {
        forwardStatusChange()
    }
    
<<<<<<< HEAD
    private func forwardStatusChange() {
        if let delegate = delegate {
            delegate.didReceiveStateChange(self)
        }
=======
    func forwardStatusChange() {
        delegate?.didReceiveStateChange(self)
>>>>>>> 20a8b3e3ad02faa36399dae1df498d154af5192d
    }
}
